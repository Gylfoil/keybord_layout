/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define GRN 1
#define RED 2
#define ORG 3
#define CFG 4

#include "combos.dtsi"

#define ________ &trans
#define XXXXXXXX &none

// Modifiers
#define Z_SFT &mt LSHFT Z
#define X_CTL &mt LCTRL X
#define V_ALT &mt LALT V
#define M_ALT &mt LALT M
#define DOT_CTL &mt RCTRL DOT
#define ENT_SFT &mt RSHFT ENTER
#define ENT_ALT &mt LALT ENTER
#define FSL_SFT &mt RSHFT FSLH
#define BSL_SFT &mt RSHFT BSLH
#define SQT_ALT &mt RALT SQT
#define GRV_ALT &mt RALT GRAVE
#define ESC_CTL &mt LCTRL ESC

// Layers
#define SPC_GRN &lt GRN SPACE
#define BSP_RED &lt RED BSPC
#define BSP_GRN &lt GRN BSPC
#define DEL_RED &lt RED DEL
#define ESC_CFG &lt CFG ESC
#define Q_CFG &lt CFG Q

// Bluetooth
#define BT_1 &bt BT_SEL 0
#define BT_2 &bt BT_SEL 1
#define BT_3 &bt BT_SEL 2

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <GRN RED>;
            then-layer = <ORG>;
        };
    };
};

/ {
//  #           #           #           #           #           #           #           #           #           #           #           #           #           #
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
    ESC_CFG     Q_CFG       &kp W       &kp E       &kp R       &kp T                               &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
    &kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G                               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
    &kp LSHFT   Z_SFT       X_CTL       &kp C       V_ALT       &kp B                               &kp N       M_ALT       &kp COMMA   DOT_CTL     FSL_SFT     ENT_SFT
                                                    &kp LWIN    ESC_CTL     BSP_RED     SPC_GRN     ENT_ALT     SQT_ALT
            >;
        };

        green_layer {
            bindings = <
    &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp DEL
    &kp TAB     &kp TAB     XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            &kp EQUAL   &kp LEFT    &kp UP      &kp RIGHT   &kp COLON   &kp GRAVE
    &kp LSHFT   &kp LSHFT   &kp LCTRL   XXXXXXXX    &kp LALT    XXXXXXXX                            &kp MINUS   &kp LPAR    &kp DOWN    &kp RPAR    BSL_SFT     ENT_SFT
                                                    &kp LWIN    ESC_CTL     DEL_RED     ________    ENT_ALT     GRV_ALT
            >;
        };

        red_layer {
            bindings = <
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    &kp PSCRN   XXXXXXXX
    XXXXXXXX    &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                              &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     XXXXXXXX
    &kp LSHFT   &kp LSHFT   &kp LCTRL   XXXXXXXX    &kp LALT    &kp F11                             &kp F12     &kp LALT    XXXXXXXX    &kp LCTRL   &kp RSHFT   ENT_SFT
                                                    &kp LWIN    &kp LCTRL   ________    BSP_GRN     ENT_ALT     XXXXXXXX
            >;
        };

        orange_layer {
            bindings = <
    &kp ESC     &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT                           &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR    &kp BSPC
    &kp TAB     &caps_word  XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            &kp PLUS    &kp HOME    &kp PG_UP   &kp END     XXXXXXXX    XXXXXXXX
    &kp LSHFT   &kp LSHFT   XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            &kp UNDER   &kp LBKT    &kp PG_DN   &kp RBKT    XXXXXXXX    ENT_SFT
                                                    XXXXXXXX    XXXXXXXX    ________    ________    ENT_ALT     XXXXXXXX
            >;
        };

        config_layer {
            bindings = <
    ________    ________    BT_1        BT_2        BT_3        XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
                                                    &bt BT_CLR  XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
            >;
        };
    };
};
