/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ENT_RSFT 

#define BLUE 1
#define RED 2

#define SPC_BLU (&lt BLUE SPACE)
#define ENT_RED (&lt RED ENTER)
#define BSPC_ALT (&mt RALT BSPC)
#define SPC_ALT (&mt LALT SPACE)
#define ENT_CTL (&mt LCTRL ENTER)
#define ENT_SFT (&mt RSFT ENTER)
#define UND_WIN (&mt LWIN UNDER)

#define ________ &trans
#define XXXXXXXX &none

//  #           #           #           #           #           #           #           #           #           #           #           #           #           #

/ {
    keymap {
        compatible = "zmk,keymap";
            default_layer {
                bindings = <
    &kp ESC     &kp Q       &kp W       &kp E       &kp R       &kp T                               &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
    &kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G                               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
    &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B                               &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    ENT_SFT
                                                    UND_WIN     ENT_RED     ENT_CTL     SPC_ALT     SPC_BLU     BSPC_ALT
                >; 
            };

        blue_layer {
            bindings = <   
    &kp ESC     &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT                           &kp CARET   &kp AMPS    &kp ASTRK   &kp MINUS   &kp EQUAL   &kp DEL
    &kp TAB     &kp F1      &kp F2      &kp LBRC    &kp LBKT    &kp LT                              &kp LPAR    &kp LEFT    &kp UP      &kp RIGHT   &kp COLON   &kp GRAVE
    &kp LSHFT   &kp Z       &kp X       &kp RBRC    &kp RBKT    &kp GT                              &kp RPAR    XXXXXXXX    &kp DOWN    XXXXXXXX    &kp BSLH    ENT_SFT
                                                    UND_WIN     ENT_RED     ENT_CTL     SPC_ALT     ________    BSPC_ALT
            >; 
        };

        red_layer {
            bindings = <
    &kp PSCRN   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp BSPC
    &kp TAB     &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                              &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp SQT
    &kp LSHFT   XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    &kp F11                             &kp F12     &kp M       &kp COMMA   &kp DOT     &kp FSLH    ENT_SFT
                                                    UND_WIN     ________    ENT_CTL     SPC_ALT     ________    BSPC_ALT
            >; 
        };
    };
};
