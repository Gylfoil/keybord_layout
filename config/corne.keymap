/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define GRN 1
#define RED 2
#define ORG 3
#define CFG 4

#include "combos.dtsi"

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&caps_word {
    continue-list = <UNDERSCORE N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 BSPC DEL>;
};

#define ________ &trans
#define XXXXXXXX &none

// Modifiers
#define Z_SFT &mt LSHFT Z
#define X_WIN &mt LWIN X
#define C_ALT &mt LALT C
#define V_CTL &mt LCTL V

#define M_CTL &mt LCTL M
#define COM_ALT &mt LALT COMMA
#define DOT_WIN &mt LWIN DOT
#define FSL_SFT &mt RSHFT FSLH

#define LBKT_ALT &mt LALT LBKT
#define BSL_SFT &mt RSHFT BSLH

#define ESC_WIN &mt LWIN ESC
#define BSP_ALT &mt RALT BSPC

// Layers
#define Q_CFG &lt CFG Q
#define ESC_RED &lt RED ESC
#define ENT_RED &lt RED ENTER
#define SPC_GRN &lt GRN SPACE
#define UND_GRN &lt GRN UNDER

// Bluetooth
#define BT_1 &bt BT_SEL 0
#define BT_2 &bt BT_SEL 1
#define BT_3 &bt BT_SEL 2

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <GRN RED>;
            then-layer = <ORG>;
        };
    };
};

/ {
    macros {
        ZMK_MACRO(end_ent,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp END &kp ENTER>;
        )
    };
};

/ {
//  #           #           #           #           #           #           #           #           #           #           #           #           #           #
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
    XXXXXXXX    Q_CFG       &kp W       &kp E       &kp R       &kp T                               &kp Y       &kp U       &kp I       &kp O       &kp P       XXXXXXXX
    XXXXXXXX    &kp A       &kp S       &kp D       &kp F       &kp G                               &kp H       &kp J       &kp K       &kp L       &kp SEMI    XXXXXXXX
    XXXXXXXX    Z_SFT       &kp X       C_ALT       V_CTL       &kp B                               &kp N       M_CTL       COM_ALT     &kp DOT     FSL_SFT     XXXXXXXX
                                                    ESC_WIN     ENT_RED     XXXXXXXX    XXXXXXXX    SPC_GRN     BSP_ALT
            >;
        };

        green_layer {
            bindings = <
    XXXXXXXX    &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      XXXXXXXX
    XXXXXXXX    &kp TAB     XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            &kp MINUS   &kp EQUAL   &kp LPAR    &kp RPAR    &kp COLON   XXXXXXXX
    XXXXXXXX    &kp LSHFT   XXXXXXXX    &kp LALT    XXXXXXXX    XXXXXXXX                            &kp GRAVE   &kp SQT     LBKT_ALT    &kp RBKT    BSL_SFT     XXXXXXXX
                                                    ESC_WIN     &end_ent    XXXXXXXX    XXXXXXXX    ________    &kp DEL
            >;
        };

        red_layer {
            bindings = <
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    &kp PSCRN   XXXXXXXX
    XXXXXXXX    &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                              &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     XXXXXXXX
    XXXXXXXX    &kp LSHFT   XXXXXXXX    &kp LALT    &kp LCTL    &kp F11                             &kp F12     &kp LCTRL   &kp LALT    XXXXXXXX    &kp RSHFT   XXXXXXXX
                                                    ESC_WIN     ________    XXXXXXXX    XXXXXXXX    UND_GRN     XXXXXXXX
            >;
        };

        orange_layer {
            bindings = <
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
    XXXXXXXX    &caps_word  XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    &kp LEFT    &kp UP      &kp RIGHT   XXXXXXXX    XXXXXXXX
    XXXXXXXX    &kp LSHFT   XXXXXXXX    &kp LALT    &kp LCTL    XXXXXXXX                            XXXXXXXX    &kp HOME    &kp DOWN    &kp END     XXXXXXXX    XXXXXXXX
                                                    ESC_WIN     ________    XXXXXXXX    XXXXXXXX    ________    XXXXXXXX
            >;
        };

        config_layer {
            bindings = <
    XXXXXXXX    ________    BT_1        BT_2        BT_3        XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX                            XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
                                                    &bt BT_CLR  XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX    XXXXXXXX
            >;
        };
    };
};
